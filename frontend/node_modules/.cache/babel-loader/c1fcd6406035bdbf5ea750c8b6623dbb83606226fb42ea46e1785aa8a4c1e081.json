{"ast":null,"code":"var _jsxFileName = \"D:\\\\DEV\\\\foundry-app\\\\frontend\\\\src\\\\components\\\\CastingProcessForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CastingProcessForm = () => {\n  _s();\n  const {\n    projectId,\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [stepName, setStepName] = useState('');\n  const [description, setDescription] = useState('');\n  const [cost, setCost] = useState('');\n  const [timeRequired, setTimeRequired] = useState('');\n  const [materialUsed, setMaterialUsed] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (id) {\n      const fetchProcess = async () => {\n        try {\n          const response = await fetch(`http://localhost:5000/api/casting-processes/${id}`);\n          const data = await response.json();\n          if (response.ok) {\n            setStepName(data.step_name);\n            setDescription(data.description);\n            setCost(data.cost);\n            setTimeRequired(data.time_required);\n            setMaterialUsed(data.material_used);\n          } else {\n            throw new Error(data.error);\n          }\n        } catch (error) {\n          console.error('Error fetching casting process:', error);\n          setError(error.message);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchProcess();\n    } else {\n      setLoading(false);\n    }\n  }, [id]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const processData = {\n      step_name: stepName,\n      description,\n      cost,\n      time_required: timeRequired,\n      material_used: materialUsed\n    };\n    try {\n      const response = id ? await fetch(`http://localhost:5000/api/casting-processes/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(processData)\n      }) : await fetch(`http://localhost:5000/api/projects/${projectId}/casting-processes`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(processData)\n      });\n      if (response.ok) {\n        navigate(`/projects/${projectId}/casting-processes`);\n      } else {\n        const data = await response.json();\n        throw new Error(data.error);\n      }\n    } catch (error) {\n      console.error('Error saving casting process:', error);\n      setError(error.message);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Step Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: stepName,\n        onChange: e => setStepName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Cost\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: cost,\n        onChange: e => setCost(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Time Required\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: timeRequired,\n        onChange: e => setTimeRequired(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Material Used\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: materialUsed,\n        onChange: e => setMaterialUsed(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: [id ? 'Update' : 'Create', \" Casting Process\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(CastingProcessForm, \"wy9MMZFqlZKqxXVRNCNx89p/tXc=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = CastingProcessForm;\nexport default CastingProcessForm;\nvar _c;\n$RefreshReg$(_c, \"CastingProcessForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","jsxDEV","_jsxDEV","CastingProcessForm","_s","projectId","id","navigate","stepName","setStepName","description","setDescription","cost","setCost","timeRequired","setTimeRequired","materialUsed","setMaterialUsed","loading","setLoading","error","setError","fetchProcess","response","fetch","data","json","ok","step_name","time_required","material_used","Error","console","message","handleSubmit","e","preventDefault","processData","method","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/DEV/foundry-app/frontend/src/components/CastingProcessForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst CastingProcessForm = () => {\r\n  const { projectId, id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [stepName, setStepName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [cost, setCost] = useState('');\r\n  const [timeRequired, setTimeRequired] = useState('');\r\n  const [materialUsed, setMaterialUsed] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      const fetchProcess = async () => {\r\n        try {\r\n          const response = await fetch(`http://localhost:5000/api/casting-processes/${id}`);\r\n          const data = await response.json();\r\n          if (response.ok) {\r\n            setStepName(data.step_name);\r\n            setDescription(data.description);\r\n            setCost(data.cost);\r\n            setTimeRequired(data.time_required);\r\n            setMaterialUsed(data.material_used);\r\n          } else {\r\n            throw new Error(data.error);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching casting process:', error);\r\n          setError(error.message);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n      fetchProcess();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [id]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const processData = { step_name: stepName, description, cost, time_required: timeRequired, material_used: materialUsed };\r\n    try {\r\n      const response = id \r\n        ? await fetch(`http://localhost:5000/api/casting-processes/${id}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(processData),\r\n          })\r\n        : await fetch(`http://localhost:5000/api/projects/${projectId}/casting-processes`, {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(processData),\r\n          });\r\n\r\n      if (response.ok) {\r\n        navigate(`/projects/${projectId}/casting-processes`);\r\n      } else {\r\n        const data = await response.json();\r\n        throw new Error(data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving casting process:', error);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>Step Name</label>\r\n        <input type=\"text\" value={stepName} onChange={(e) => setStepName(e.target.value)} required />\r\n      </div>\r\n      <div>\r\n        <label>Description</label>\r\n        <input type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n      </div>\r\n      <div>\r\n        <label>Cost</label>\r\n        <input type=\"number\" value={cost} onChange={(e) => setCost(e.target.value)} />\r\n      </div>\r\n      <div>\r\n        <label>Time Required</label>\r\n        <input type=\"text\" value={timeRequired} onChange={(e) => setTimeRequired(e.target.value)} />\r\n      </div>\r\n      <div>\r\n        <label>Material Used</label>\r\n        <input type=\"text\" value={materialUsed} onChange={(e) => setMaterialUsed(e.target.value)} />\r\n      </div>\r\n      <button type=\"submit\">{id ? 'Update' : 'Create'} Casting Process</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CastingProcessForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\DEV\\\\foundry-app\\\\frontend\\\\src\\\\components\\\\StorageMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './StorageMap.css'; // Add this line to import CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StorageMap = () => {\n  _s();\n  const [locations, setLocations] = useState([]);\n  const [error, setError] = useState(null);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  useEffect(() => {\n    const fetchLocations = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/storage-locations');\n        const data = await response.json();\n        if (response.ok) {\n          setLocations(Array.isArray(data) ? data : []);\n        } else {\n          throw new Error(data.error);\n        }\n      } catch (error) {\n        console.error('Error fetching storage locations:', error);\n        setError(error.message);\n      }\n    };\n    fetchLocations();\n  }, []);\n  const handleLocationClick = location => {\n    setSelectedLocation(location);\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Storage Map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"storage-map\",\n      children: locations.map(location => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"storage-location\",\n        onClick: () => handleLocationClick(location),\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: location.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, location.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), selectedLocation && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: selectedLocation.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedLocation.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Capacity: \", selectedLocation.capacity]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(StorageMap, \"TKLZbFycdq99Bc2fne7OSL38YAw=\");\n_c = StorageMap;\nexport default StorageMap;\nvar _c;\n$RefreshReg$(_c, \"StorageMap\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","StorageMap","_s","locations","setLocations","error","setError","selectedLocation","setSelectedLocation","fetchLocations","response","fetch","data","json","ok","Array","isArray","Error","console","message","handleLocationClick","location","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","onClick","name","id","description","capacity","_c","$RefreshReg$"],"sources":["D:/DEV/foundry-app/frontend/src/components/StorageMap.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './StorageMap.css'; // Add this line to import CSS for styling\r\n\r\nconst StorageMap = () => {\r\n  const [locations, setLocations] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [selectedLocation, setSelectedLocation] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchLocations = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/storage-locations');\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n          setLocations(Array.isArray(data) ? data : []);\r\n        } else {\r\n          throw new Error(data.error);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching storage locations:', error);\r\n        setError(error.message);\r\n      }\r\n    };\r\n\r\n    fetchLocations();\r\n  }, []);\r\n\r\n  const handleLocationClick = (location) => {\r\n    setSelectedLocation(location);\r\n  };\r\n\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Storage Map</h1>\r\n      <div className=\"storage-map\">\r\n        {locations.map((location) => (\r\n          <div\r\n            key={location.id}\r\n            className=\"storage-location\"\r\n            onClick={() => handleLocationClick(location)}\r\n          >\r\n            <p>{location.name}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {selectedLocation && (\r\n        <div className=\"location-details\">\r\n          <h2>{selectedLocation.name}</h2>\r\n          <p>{selectedLocation.description}</p>\r\n          <p>Capacity: {selectedLocation.capacity}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StorageMap;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\DEV\\\\foundry-app\\\\frontend\\\\src\\\\components\\\\Notifications.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Notifications = () => {\n  _s();\n  const [notifications, setNotifications] = useState([]);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchNotifications = async () => {\n      try {\n        const response = await fetch('http://localhost:5000/api/notifications', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        const data = await response.json();\n        if (response.ok) {\n          setNotifications(data);\n        } else {\n          throw new Error(data.error);\n        }\n      } catch (error) {\n        console.error('Error fetching notifications:', error);\n        setError(error.message);\n      }\n    };\n    fetchNotifications();\n  }, []);\n  const markAsRead = async id => {\n    try {\n      const response = await fetch(`http://localhost:5000/api/notifications/${id}/read`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setNotifications(notifications.map(n => n.id === id ? {\n          ...n,\n          read: true\n        } : n));\n      } else {\n        throw new Error(data.error);\n      }\n    } catch (error) {\n      console.error('Error marking notification as read:', error);\n      setError(error.message);\n    }\n  };\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notifications\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notifications.map(notification => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          textDecoration: notification.read ? 'line-through' : 'none'\n        },\n        children: [notification.message, !notification.read && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => markAsRead(notification.id),\n          children: \"Mark as Read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this)]\n      }, notification.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(Notifications, \"6fbvM4kbMmTHILM0/eKLiYfB2Ik=\");\n_c = Notifications;\nexport default Notifications;\nvar _c;\n$RefreshReg$(_c, \"Notifications\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Notifications","_s","notifications","setNotifications","error","setError","fetchNotifications","response","fetch","headers","Authorization","localStorage","getItem","data","json","ok","Error","console","message","markAsRead","id","method","map","n","read","children","fileName","_jsxFileName","lineNumber","columnNumber","notification","style","textDecoration","onClick","_c","$RefreshReg$"],"sources":["D:/DEV/foundry-app/frontend/src/components/Notifications.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst Notifications = () => {\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchNotifications = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:5000/api/notifications', {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n        const data = await response.json();\r\n        if (response.ok) {\r\n          setNotifications(data);\r\n        } else {\r\n          throw new Error(data.error);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching notifications:', error);\r\n        setError(error.message);\r\n      }\r\n    };\r\n\r\n    fetchNotifications();\r\n  }, []);\r\n\r\n  const markAsRead = async (id) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/notifications/${id}/read`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${localStorage.getItem('token')}`\r\n        }\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setNotifications(notifications.map(n => n.id === id ? { ...n, read: true } : n));\r\n      } else {\r\n        throw new Error(data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error marking notification as read:', error);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notifications</h1>\r\n      <ul>\r\n        {notifications.map((notification) => (\r\n          <li key={notification.id} style={{ textDecoration: notification.read ? 'line-through' : 'none' }}>\r\n            {notification.message}\r\n            {!notification.read && (\r\n              <button onClick={() => markAsRead(notification.id)}>Mark as Read</button>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
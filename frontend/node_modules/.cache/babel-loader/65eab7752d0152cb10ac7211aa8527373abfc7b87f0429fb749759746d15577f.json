{"ast":null,"code":"var _jsxFileName = \"D:\\\\DEV\\\\foundry-app\\\\frontend\\\\src\\\\components\\\\ArtistForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArtistForm = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [name, setName] = useState('');\n  const [contactDetails, setContactDetails] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (id) {\n      const fetchArtist = async () => {\n        try {\n          const response = await fetch(`http://localhost:5000/api/artists/${id}`);\n          const data = await response.json();\n          if (response.ok) {\n            setName(data.name);\n            setContactDetails(data.contact_details);\n          } else {\n            throw new Error(data.error);\n          }\n        } catch (error) {\n          console.error('Error fetching artist:', error);\n          setError(error.message);\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchArtist();\n    } else {\n      setLoading(false);\n    }\n  }, [id]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const artistData = {\n      name,\n      contact_details: contactDetails\n    };\n    try {\n      const response = id ? await fetch(`http://localhost:5000/api/artists/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(artistData)\n      }) : await fetch('http://localhost:5000/api/artists', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(artistData)\n      });\n      if (response.ok) {\n        navigate('/artists');\n      } else {\n        const data = await response.json();\n        throw new Error(data.error);\n      }\n    } catch (error) {\n      console.error('Error saving artist:', error);\n      setError(error.message);\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Contact Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: contactDetails,\n        onChange: e => setContactDetails(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: [id ? 'Update' : 'Create', \" Artist\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(ArtistForm, \"Pewsdbd76ec+LEHAA5EXjeqvi88=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ArtistForm;\nexport default ArtistForm;\nvar _c;\n$RefreshReg$(_c, \"ArtistForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","jsxDEV","_jsxDEV","ArtistForm","_s","id","navigate","name","setName","contactDetails","setContactDetails","loading","setLoading","error","setError","fetchArtist","response","fetch","data","json","ok","contact_details","Error","console","message","handleSubmit","e","preventDefault","artistData","method","headers","body","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["D:/DEV/foundry-app/frontend/src/components/ArtistForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nconst ArtistForm = () => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const [name, setName] = useState('');\r\n  const [contactDetails, setContactDetails] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      const fetchArtist = async () => {\r\n        try {\r\n          const response = await fetch(`http://localhost:5000/api/artists/${id}`);\r\n          const data = await response.json();\r\n          if (response.ok) {\r\n            setName(data.name);\r\n            setContactDetails(data.contact_details);\r\n          } else {\r\n            throw new Error(data.error);\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching artist:', error);\r\n          setError(error.message);\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n      fetchArtist();\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, [id]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const artistData = { name, contact_details: contactDetails };\r\n    try {\r\n      const response = id \r\n        ? await fetch(`http://localhost:5000/api/artists/${id}`, {\r\n            method: 'PUT',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(artistData),\r\n          })\r\n        : await fetch('http://localhost:5000/api/artists', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify(artistData),\r\n          });\r\n\r\n      if (response.ok) {\r\n        navigate('/artists');\r\n      } else {\r\n        const data = await response.json();\r\n        throw new Error(data.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error saving artist:', error);\r\n      setError(error.message);\r\n    }\r\n  };\r\n\r\n  if (loading) return <div>Loading...</div>;\r\n  if (error) return <div>{error}</div>;\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>Name</label>\r\n        <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} required />\r\n      </div>\r\n      <div>\r\n        <label>Contact Details</label>\r\n        <input type=\"text\" value={contactDetails} onChange={(e) => setContactDetails(e.target.value)} />\r\n      </div>\r\n      <button type=\"submit\">{id ? 'Update' : 'Create'} Artist</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ArtistForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}